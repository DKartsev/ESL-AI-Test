from datasets import load_dataset, Dataset
from transformers import pipeline
from tqdm.auto import tqdm
import pandas as pd


def main() -> None:
    """Translate the UniversalCEFR dataset to Esperanto and save it."""
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞ UniversalCEFR
    dataset = load_dataset("UniversalCEFR/cefr_sp_en", split="train")
    print(f"üîπ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤: {len(dataset)}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π ‚Üí —ç—Å–ø–µ—Ä–∞–Ω—Ç–æ)
    translator = pipeline("translation", model="Helsinki-NLP/opus-mt-en-eo")

    # –ü–µ—Ä–µ–≤–æ–¥ –≤—Å–µ—Ö —Ñ—Ä–∞–∑
    texts = [x["text"] for x in dataset]
    translations = []
    for i in tqdm(range(0, len(texts), 16), desc="Translating"):
        batch = texts[i:i+16]
        out = translator(batch, max_length=256)
        translations.extend(out)

    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º
    translated_data = pd.DataFrame({
        "text_eo": [t["translation_text"] for t in translations],
        "level": [x["label"] for x in dataset]
    })

    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ CSV
    translated_data.to_csv("translated_cefr_dataset.csv", index=False)
    print(
        "‚úÖ –î–∞—Ç–∞—Å–µ—Ç —Å —ç—Å–ø–µ—Ä–∞–Ω—Ç–æ —Ñ—Ä–∞–∑–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ translated_cefr_dataset.csv"
    )


if __name__ == "__main__":
    main()
